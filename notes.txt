docker --help

add more mem - good for ELK
sudo sysctl -w vm.max_map_count=262144

docker container ls
docker container ls -a
docker container paal

docker-compose -f burrow-docker-compose.yml up -d

docker exec
docker exec -it elk /bin/bash
docker exec -it elk2 bash
docker exec -it fb /bin/bash
docker exec -it paal /bin/bash
docker exec -it paal bash
docker exec elk /bin/bash
docker exec elk bash

docker images
docker kill elk
docker kill paal
docker ps
docker ps -a 
docker pull centos
docker pull docker.elastic.co/beats/filebeat:7.6.2
docker pull docker.io/sebp/elk

docker restart
docker restart elk
docker rm --help
docker rm elk
docker rm elk2
docker rm fb
docker rm paal
docker run -d -t --name paal -
docker run -it docker_elk bash
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -it --name elk sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9300:9300 -it --name elk sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9300:9300 -it --name elk2 sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -it --name elk sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -it --name elk sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -it --name elk sebp/elk --help
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -it --name elk sebp/elk2
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -it --name elk2 sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -it --name paal sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -it elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp -p 514:514/udp -it --name elk sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp 514:514/udp -it --name elk sebp/elk
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp 753e1cc6de4c
docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp elk
docker run -p 9995:9995/udp -it --name fb 0272ee9a7757
docker run -p 9995:9995/udp -it --name fb docker.elastic.co/beats/filebeat
docker run -p 9995:9995/udp -p 514:514/udp -it --name fb 0272ee9a7757
docker search centos
docker search elk
docker start -p 5601:5601 -p 9200:9200 -p 5044:5044 -p 9995:9995/udp -p 5678:5678/udp 753e1cc6de4c
docker start elk
docker start paal
docker stats
docker stop centos
docker stop elk
docker-current
docker-current run
systemctl start docker
systemctl stop docker 

One liner to stop / remove all of Docker containers:

docker stop $(docker ps -a -q)
docker kill $(docker ps -a -q)
docker rm $(docker ps -a -q)

docker kill $(docker ps -a -q) & docker rm $(docker ps -a -q)

docker inspect <dockerid> | grep -i port


--- networks ---
# create another bridge (driver)
docker network create lol
# attach docker to network
docker run -it --rm --network lol --name thor busybox

--- create macvlan "mode bridge" (also dot1q) --- different mac addresses in arp table
docker network create -d macvlan --subnet 192.168.20.0/24 --gateway 192.168.20.1 -o parent=eth0 newlan
docker run -itd --rm --network newlan --name thor --ip 192.168.20.5 nginx
docker exec -it thor sh
for i in {150..170}; do d run -itd --rm --network newlan --name thor$i --ip 192.168.20.$i busybox; done
for i in {150..170}; do d exec -it thor$i /bin/ping 192.168.20.1 -c 1; done
for i in {150..170}; do d stop thor$i; done

--- create ipvlan network (l2 default) all hosts will get the same mac address in arp table ( same as host )
d network create -d ipvlan --subnet 192.168.20.0/24 --gateway 192.168.20.1 -o ipvlan_mode=l2 -o parent=eth0 l2
d network create -d ipvlan --subnet 192.168.20.0/24 --gateway 192.168.20.1 -o ipvlan_mode=l3 -o parent=eth0 l3
docker run -itd --rm --network l2 --name thor --ip 192.168.20.5 busybox

for i in {150..152}; do d run -itd --rm --network l2 --name thor$i --ip 192.168.20.$i busybox; done
for i in {150..152}; do d exec -it thor$i /bin/ping 192.168.20.1 -c 1; done
for i in {150..152}; do d stop thor$i; done


--- create ipvlan network (l3 default) 
d network create -d ipvlan --subnet 192.168.21.0/24 -o ipvlan_mode=l3 -o parent=eth0 l3
d network create -d ipvlan --subnet 192.168.21.0/24 -o ipvlan_mode=l3 -o parent=eth0 --subnet 192.168.22.0/24 l3

docker run -itd --rm --network as10 --name thor --ip 192.168.21.5 busybox
docker run -itd --rm --network l3 --name thor2 --ip 192.168.22.5 busybox

docker network create --subnet 10.10.10.0/24 as10
docker network create --subnet 10.10.20.0/24 as20
docker run -itd --rm --network as10 --name thor10 busybox

https://github.com/xcad2k/cheat-sheets/blob/main/infrastructure/docker/docker.md
https://github.com/vrnetlab/vrnetlab
https://www.brianlinkletter.com/2019/03/vrnetlab-emulate-networks-using-kvm-and-docker/
https://www.youtube.com/watch?v=qigCla1qY3k
